htjapyscriptssary++

DA PLEN GOES HERE
 
'
PLEN:
    (1) E DDONT BE RACIST AND FLIP COIN (DONE)
        (a) Ask user beforehand heads or tails and what color they want to be.
            (I) Store in hashmap, white --> (heads or tails) and black --> (heads or tails).
        (b) Then, whoever guesses correct thing will go first.
        (c) after each turn, we will flip da board.
    (2) AS YOU HOVER OVER EACH SQUARE, HIGHLIGHT IT TO INDICATE TAT YOU ARE HIGHLIGHTING (DONE)
        (a) document.querySelector().addEventListener('mouseover', function() -> {object.backgroundColor = 'blue'})
        (b) when off the square, must be the same color
    (3) NEED TO CREATE MAP IN JS (DONE)
        (a) shows where each piece is, and the name of the piece and what color side it is on. 
        (b) type of piece for movement purposes
    (4) MOVEMENT (HASHMAP) (WHITE DONE)
        (a) SLOPE
            (I) 'knight': '-2',
                'bishop': '1',
                'pawn': {'slope': 'undefined', 'distance': '1'},
                'king': {'slope': 'undefined', 'distance': '1'} 
            (II) TO CHECK HOW FAR EACH PIECE CAN GO, WE USE THE DISTANCE. IF THE DISTANCE IS 1, THAT MEANS THAT IT CAN ONLY GO 1 SQUARE AT A TIME. IF THE OBJECT IS ANYTHING OTHER THAN A PAWN, IT CAN GO IN ANY DIRECTION (FORWARD, BACKWARD, LEFT, AND RIGHT). EXCEPTIONS APPLY. (KING, QUEEN, BISHOP). PAWNS CAN ONLY MOVE FORWARD UNLESS KILLINGGG.
            (III) ROOKS AND QUEENS BOTH HAVE SLOPES THAT ARE UNDEFINED, BUT THEY CAN HAVE A DISTANCE OF UNDEFINED AS WELL. FOR THESE PIECES, WE WILL SIMPLY GO IN THE DIRECTION THEY GO. ROOK CAN GO IN ALL FOUR DIRECTIONS (FORWARD, BACKWARD, LEFT AND RIGHT). QUEEN, HOWEVER, HAS A SPECIAL REQUIREMENT OF MOVING (FORWARD, BACKWARD, LEFT, RIGHT, AND DIAGONAL)
            (IV) FOR DIAGONAL MOVING OBJECTS (KING, QUEEN, BISHOP), WE USE THE SLOPE FORMULA. FOR EXAMPLE, QUEEN HAS SLOPE OF UNDEFINED (BECAUSE IT CAN MOVE INFINETLY IN ALL 5 DIRECTIONS(FORWARD, BACKWARD, LEFT, RIGHT, AND DIAGONAL)). USING THIS, WE CAN SIMPLY HIGHLIGHT EVERYTHING IN ALL FIVE DIRECTIONS USING THE SLOPE BY GOING TO THE RIGHT 1 AND UP 1 SQUARE. (WE HAVE THE A1 TO A2 TO B2 PROCESS.) WHEN LOOPING THROUGH TO HIGHLIGHT THE PLACES THAT YOU CAN MOVE TO, CHECK IF THERE IS AN OBJECT IN THE WAY. IF THERE IS AN OBJECT IN THE WAY, HIGHLIGHT IT IN RED AND STOP THE HIGHLIGHTING PROCESS AS YOU CANNOT GO PAST THAT PIECE. 
        (NEW 5) ENFORECMENT (DONE) (MODIFIED FIRST STAR) 
            (*)CHECK FOR LEGAL MOVEMENTS. IF THE MOVE IS NOT LEGAL. SHAKE THE SQUARE TO SHOW TO THE BLIND USER THAT THEY CANNOT MAKE THIS MOVE. 
            (**) TO CHECK FOR LEGAL MOVEMENTS, SIMPLY CHECK IF THE SQUARE IS HIGHLIGHTED WITH A BORDER, IF IT IS THAT WOULD INDICATE THAT IT IS A LEGAL MOVE. IF IT IS NOT THAT MEANS IT IS NOT A LEGAL MOVE. 
            (***) IF THE USER CLICKS ON A SQUARE, AND THERE IS ALREADY ANOTHER SQUARE HIGHLIGHTED, DE-HIGHLIGHT THE PREVIOUS SQUARE AND HIGHLIGHT THIS SQUARE. (BUG)
        (5) KILLINGSSSSSS
            (a) IF THE USER KILLS ANOTHER PIECE FOLLOW THESE STEPS:
                (I) CHECK IF LEGITAMTE MOVE (NO CHEATING ALLOWED)
                (II) IF AND ONLY IF IT IS A LEGITAMATE MOVE, WE KICK THAT PIECE OFF THE BOARD AND INCREMENT THE TALLY OF MURDERS TO THE PERSON THAT COMMITTED THE MURDER.
 
        (6) CHECKS AND CHECKMATESSS
            (a) CHECKS:
                (I) IF A MOVEMENT CAUSES A CHECK (WHERE THE FAT KING IS IN DANGER), WE HIGHILGHT THE KING IN DAGER IN RED OR SOME DANGER COLOR TO SHOW THE OTHER USER THAT THEIR KING IS IN DANGER.
                (II) IF A USER CLICKS ON A PIECE THAT DOESN\'T GET THEIR KING OUT OF DANGER, WE WILL SHAKE THE PIECE TO DEMONSTRATE THAT THEY CANNOT MAKE THIS MOVE. IF THE USER CLICKS TWICE IN A ROW ON A PIECE THAT DOESN\'T GET THEIR FAT KING OUT OF DANGER, WE WILL ALERT THE USER THAT THEY ARE BEING A BLIND BAT AND THEIR KING IS IN DANGER. 
                (III) WE KEEP HIGHLIGHTING THE KING IN RED UNTIL IT IS OUT OF DANGER. 
                (IV) WHEN A PIECE IS DECLARED DEAD, WE WILL REMOVE IT FROM THE BOARD AND PUT IT ON THE SIDE. IT WILL GO ON THE SIDE OF THE MURDERER.
             (b) CHECKMATE: 
                (I) FOR EVERY CHECK, WE CHECK FOR CHECKMATE (USING FUNCTIONS).
                    (*) IF ANY MOVE THAT THE TEAM WITH THE CHECKED KING MAKES DOES NOT GET THEM OUT OF CHECK, WE WILL DECLARE CHECKMATE AND PRONOUNCE THE USER THAT HAS BEEN CHECKMATED AS A LOSER (TRASH AT THE GAME (GET BETTER KID))        
        (7) STATS
            (a) EVERY PIECE HAS A CERTAIN SCORE. EVERY TIME A PIECE IS TAKEN (KILLED) WE TALLY A SCORE AND ADD IT TO THE CORRECT PERSON.
                (I) CREATE A BUTTON THAT DISPLAYS THE STATS SO FAR. WHEN THIS BUTTON IS PRESSED, WE WILL SHOW THEM THEIR SCORES AND WHO IS WINNING SO FAR.
                (II) THE STATS INCLUDE:
                    (*) NUMBER OF PIECES REMAINING ON EACH SIDE.
                    (**) THE SCORE OF ALL THE PIECES THAT YOU AND THE OPPOSITION HAS KILLED
                    (***) WHO HAS GREATER SCORE ON THE BOARD SO FAR
                    (****) THE NUMBER OF PIECES THAT YOU AND THE OPPOSITION HAVE KILLED SO FAR
        (8) IN THE VERY BEGINNING ASK USER IF THEY WANT A TIMED MODE OR A NORMAL MODE
            (a) NORMAL MODE
                (I) EVERYTHING GOES NORMALLY AND SAME AS ABOVE
            (b) TIMED MODE
                (I) EVERYTHING IS STILL THE SAME AS ABOVE BUT ONE THING IS ASKED FURTHER IN THE BEGINNING. IF THE TIMED MODE IS SELECTED, WE MUST ASK THE USER HOW MUCH TIME WILL BE PASSED BETWEEN EACH MOVEMENT.
                (II) THEN, ASK THE USER IF THERE SHOULD BE CONSEQUENCES IF THE TIME IS SURPASSED.
                    (*) IF THE CONSEQUENCES MODE IS SELECTED, THEN WE MUST TIME THE USER FOR EACH OF THEIR MOVEMENTS. FOR EXAMPLE, IF THE TIME IS 3 MINS PER MOVEMENT. IF THE USER PASSES THIS TIME  (> 3 mins),THEY LOSE THEIR LIFE. THEY ALSO LOOSE THEIR CURRENT TURN AND IT IS NOW THE OPPOSITIONS TURN. 
                        (CONDITION) IF THE USER THAT HAS EXCEEDED THE TIME LIMIT IS IN CHECK, THEN THEY LOOSE THE GAME VIA CHECKMATE.
        (9) STALEMATES:
            (a) STALEMATE IS DEFINED WHEN NO FURTHER MOVEMENT IS POSSIBLE.
                (I) THE SAME MOVE HAS BEEN REPEATED  THREE TIMES IN A ROW
                    (*) KEEP A COUNTER VARIABLE THAT COUNTS THE NUMBER OF SAME MOVES MADE IN A ROW. IF IT EXCEEDS THREE, WE DECLARE STALEATE.
                (II) THERE IS NO MOVEMENT THAT CAN BE MADE WITHOUT PUTTING THE PLAYER IN CHECK.
                    (*) IF THE PLAYER IS NOT IN CHECK, BUT ANY MOVE THAT THEY CAN MAKE RESULTS THEM TO BE IN CHECK. ALSO CHECK IF ANY OTHER PIECE IS MOVEABLE, IF EVERYTHING IS FALSE, DECLARE STALEMATE.
                
        

SPECIAL CASE TOO ACOUNNT FOR:
If a king and rook has not moved yet and there are no pieces in between them then they should be able to castle.
BUGS --->


    (1) WHEN CLICKING ON ONE PIECE, AND THEN CLICKING ON ANOTHER PIECE, THE ORIGINAL PIECES MOVES ARE STILL COUNTED SO WHEN YOU MOVE THE NEW PIECE TO A SQUARE WHERE IT WOULD HAVE BEEN COUNTED AS LEGAL FOR THE FIRST PIECE, IT BRINGS BOTH PIECES WITH IT.